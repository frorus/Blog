@using Microsoft.AspNetCore.Identity
@model Tag

@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = Model.Title;
}

<div class="wrapper">
    @*  Tag title and description  *@
    <div class="blog-layout">
        <header class="blog-card branded-4 p-6" style="border-top-color: #562765 ">
            <div class="flex">
                <div class="flex flex-col w-100 justify-center">
                    <div class="flex justify-between items-center">
                        <h1 class="blog-title">@Model.Title</h1>
                    </div>
                    <p class="max-w-75 pt-5">@Model.Description</p>
                </div>
            </div>
        </header>
    </div>
    @*  Sidebar/main content  *@
    <div class="home">
        @*  Sidebar  *@
        <div id="sidebar-wrapper-left" class="sidebar-wrapper sidebar-wrapper-left">
            <aside class="side-bar">
                <div class="widget">
                    <a class="blog-btn blog-btn--s" asp-controller="Article" asp-action="Create">Create Post</a>
                </div>
                <div class="sidebar-data">
                    <div>
                        @Model.Articles.Count() Posts Published
                    </div>
                </div>
            </aside>
        </div>
        @*  Articles by tag  *@
        <main id="main-content" class="articles-list">
            @*  Latest/top filter  *@
            <header id="on-page-nav-controls" class="flex items-center p-0 pb-2">
                <div class="flex-1 flex items-center justify-between">
                    <ul class="blog-navigation blog-navigation--horizontal">
                        @if (Context.Request.Query["sortOrder"] == "top_desc")
                        {
                            <li>
                                <a class="blog-navigation__item" asp-action="Details" asp-route-id="@Model.Id">Latest</a>
                            </li>
                            <li>
                                <a class="blog-navigation__item blog-navigation__item--current" asp-action="Details" asp-route-id="@Model.Id" asp-route-sortOrder="top_desc">Top</a>
                            </li>
                        }
                        else
                        {
                            <li>
                                <a class="blog-navigation__item blog-navigation__item--current" asp-action="Details" asp-route-id="@Model.Id">Latest</a>
                            </li>
                            <li>
                                <a class="blog-navigation__item" asp-action="Details" asp-route-id="@Model.Id" asp-route-sortOrder="top_desc">Top</a>
                            </li>
                        }
                    </ul>
                </div>
            </header>
            @*  Articles  *@
            <div>
                @foreach (var article in Model.Articles)
                {
                    @*  Get username  *@
                    var user = await UserManager.GetUserNameAsync(article.User);

                    @*  Article  *@
                    <div class="blog-article">
                        <div class="blog-article__body">
                            <div class="blog-article__top">
                                <div class="blog-article__meta">
                                    @*  User avatar  *@
                                    <div class="blog-article__author-pic">
                                        <a class="blog-avatar blog-avatar--l" asp-controller="Account" asp-action="GetUserProfile" asp-route-id="@article.UserId">
                                            <img class="blog-avatar__image" src="/img/avatars/@article.User.ImagePath">
                                            ::after
                                        </a>
                                    </div>
                                    <div>
                                        @*  User name  *@
                                        <div>
                                            <div class="relative mb-0 fw-medium m:inline-block">
                                                <span class="fs-s p-1 -ml-1 -my-2">@user</span>
                                            </div>
                                        </div>
                                        @*  Article creation date  *@
                                        <div class="blog-article__tertiary fs-xs">
                                            <time datetime="@article.Date">@article.Date.ToLongDateString()</time>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="blog-article__indention">
                                @*  Article title  *@
                                <h3 class="blog-story__title fw-bold">
                                    <a asp-controller="Article" asp-action="Details" asp-route-id="@article.Id">@article.Title</a>
                                </h3>
                                @*  Article tags  *@
                                <div class="blog-article__tags">
                                    @foreach (var tag in article.Tags)
                                    {
                                        <a class="blog-tag blog-tag--monochrome" asp-controller="Tag" asp-action="Details" asp-route-id="@tag.Id">
                                            <span class="blog-tag__prefix">#</span>@tag.Title
                                        </a>
                                    }
                                </div>
                                @*  Likes/comments/favourite section  *@
                                <div class="blog-article__bottom">
                                    <div class="blog-article__details">
                                        @*  Likes  *@
                                        @*  Here and below extra comments (started with "@*") added for remove spaces between inline blocks  *@
                                        <a class="blog-btn blog-btn--s blog-btn--ghost blog-btn--icon-left" asp-controller="Article" asp-action="Details" asp-route-id="@article.Id">
                                            <svg class="blog-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24">
                                                <path d="M18.884 12.595l.01.011L12 19.5l-6.894-6.894.01-.01A4.875 4.875 0 0112 5.73a4.875 4.875 0 016.884 6.865zM6.431 7.037a3.375 3.375 0 000 4.773L12 17.38l5.569-5.569a3.375 3.375 0 10-4.773-4.773L9.613 10.22l-1.06-1.062 2.371-2.372a3.375 3.375 0 00-4.492.25v.001z"></path>
                                            </svg>@if (article.ArticleLikes.Count() == 1)
                                            {@*
                                                *@<span class="s:inline">@article.ArticleLikes.Count() reaction</span>
                                            }
                                            else
                                            {@*
                                                *@<span class="s:inline">@article.ArticleLikes.Count() reactions</span>
                                            }
                                        </a>
                                        @*  Comments  *@
                                        <a class="blog-btn blog-btn--s blog-btn--ghost blog-btn--icon-left" asp-controller="Article" asp-action="Details" asp-route-id="@article.Id" asp-fragment="comments">
                                            <svg class="blog-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24">
                                                <path d="M10.5 5h3a6 6 0 110 12v2.625c-3.75-1.5-9-3.75-9-8.625a6 6 0 016-6zM12 15.5h1.5a4.501 4.501 0 001.722-8.657A4.5 4.5 0 0013.5 6.5h-3A4.5 4.5 0 006 11c0 2.707 1.846 4.475 6 6.36V15.5z"></path>
                                            </svg>@if (article.Comments.Count == 0)
                                            {@*
                                                *@<span class="s:inline"> Add comment</span>
                                            }
                                            else
                                            {@if (article.ArticleLikes.Count() == 1)
                                                {@*
                                                    *@<span class="s:inline">@article.Comments.Count() comment</span>
                                                }
                                                else
                                                {@*
                                                    *@<span class="s:inline">@article.Comments.Count() comments</span>
                                                }               }
                                        </a>
                                    </div>
                                    @*  Favourite  *@
                                    <div class="blog-article__save">
                                        @*  Min to read  *@
                                        <small class="blog-article__tertiary fs-xs mr-2">@Math.Ceiling((double)article.Text.Length / 1500) min read</small>
                                        @*  Favourite button  *@
                                        @if (article.Favourites.Any(x => x.ArticleId == article.Id && x.UserId.ToString() == UserManager.GetUserId(User)))
                                        {
                                            <button class="c-btn c-btn--icon-alone reading-list" type="button" title="Save to reading list" aria-pressed="true" value="@article.Id">
                                                <svg class="crayons-icon c-btn__icon" focusable="false" width="24" height="24" xmlns="http://www.w3.org/2000/svg">
                                                    <path d="M6.75 4.5h10.5a.75.75 0 0 1 .75.75v14.357a.375.375 0 0 1-.575.318L12 16.523l-5.426 3.401A.375.375 0 0 1 6 19.607V5.25a.75.75 0 0 1 .75-.75z"></path>
                                                </svg>
                                            </button>
                                        }
                                        else
                                        {
                                            <button class="c-btn c-btn--icon-alone reading-list" type="button" title="Save to reading list" aria-pressed="false" value="@article.Id">
                                                <svg class="crayons-icon c-btn__icon" focusable="false" width="24" height="24" xmlns="http://www.w3.org/2000/svg">
                                                    <path d="M6.75 4.5h10.5a.75.75 0 0 1 .75.75v14.357a.375.375 0 0 1-.575.318L12 16.523l-5.426 3.401A.375.375 0 0 1 6 19.607V5.25a.75.75 0 0 1 .75-.75zM16.5 6h-9v11.574l4.5-2.82 4.5 2.82V6z"></path>
                                                </svg>
                                            </button>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </main>
    </div>
</div>