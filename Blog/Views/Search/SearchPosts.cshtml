@using Microsoft.AspNetCore.Identity
@model IEnumerable<Article>

@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Search";
}

<div class="wrapper">
    <main>
        <div class="blog-layout blog-layout--header-inside blog-layout--limited-l blog-layout--2-cols">
            <div class="blog-page-header block s:flex">
                <h1 class="blog-title block">Search results for "@ViewData["Search"]"</h1>
            </div>
            @*  Sidebar  *@
            <div class="blog-layout__sidebar-left block">
                <div class="blog-navigation nav block nav-pills" role="tablist">
                    <a class="blog-link blog-link--block active show" asp-controller="Search" asp-action="SearchPosts" asp-route-search="@ViewData["Search"]" aria-selected="true">Posts</a>
                    <a class="blog-link blog-link--block" data-toggle="pill" href="#people" aria-controls="people" role="tab" aria-selected="false">People</a>
                    <a class="blog-link blog-link--block" data-toggle="pill" href="#tags" aria-controls="tags" role="tab" aria-selected="false">Tags</a>
                </div>
            </div>
            @*  Search result body *@
            <div class="articles-list blog-layout__content tab-content">
                @if (Model.Any())
                {
                    <div id="articles" class="tab-pane fade active show" role="tabpanel" aria-labelledby="articles-tab">
                        @foreach (var article in Model)
                        {
                            @*  Get username  *@
                            var user = await UserManager.GetUserNameAsync(article.User);

                            @*  Article  *@
                            <article class="blog-story">
                                <div class="blog-story__body">
                                    <div class="blog-story__top">
                                        <div class="blog-story__meta">
                                            @*  User avatar  *@
                                            <div class="blog-story__author-pic">
                                                <a class="blog-avatar blog-avatar--l" asp-controller="User" asp-action="GetUserProfile" asp-route-id="@article.UserId">
                                                    <img class="blog-avatar__image" src="/img/avatars/@article.User.ImagePath" loading="lazy">
                                                </a>
                                            </div>
                                            <div>
                                                @*  User name  *@
                                                <div>
                                                    <div class="relative mb-0 fw-medium inline-block">
                                                        <span class="fs-s p-1 -ml-1 -my-2">@user</span>
                                                    </div>
                                                </div>
                                                @*  Article creation date  *@
                                                <div class="blog-story__tertiary fs-xs">
                                                    <time>@article.Date.ToLongDateString()</time>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="blog-story__indention">
                                        @*  Article title  *@
                                        <h3 class="blog-story__title fw-bold">
                                            <a asp-controller="Article" asp-action="Details" asp-route-id="@article.Id">@article.Title</a>
                                        </h3>
                                        @*  Article tags  *@
                                        <div class="blog-story__tags">
                                            @foreach (var tag in article.Tags)
                                            {
                                                <a class="blog-tag" asp-controller="Tag" asp-action="Details" asp-route-id="@tag.Id">
                                                    <span class="blog-tag__prefix">#</span>@tag.Title
                                                </a>
                                            }
                                        </div>
                                        @*  Likes/comments/favourite section  *@
                                        <div class="blog-article__bottom">
                                            <div class="blog-article__details">
                                                @*  Likes  *@
                                                @*  Here and below extra comments (started with "@*") added for remove spaces between inline blocks  *@
                                                <a class="blog-btn blog-btn--s blog-btn--ghost blog-btn--icon-left" asp-controller="Article" asp-action="Details" asp-route-id="@article.Id">
                                                    <svg class="blog-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24">
                                                        <path d="M18.884 12.595l.01.011L12 19.5l-6.894-6.894.01-.01A4.875 4.875 0 0112 5.73a4.875 4.875 0 016.884 6.865zM6.431 7.037a3.375 3.375 0 000 4.773L12 17.38l5.569-5.569a3.375 3.375 0 10-4.773-4.773L9.613 10.22l-1.06-1.062 2.371-2.372a3.375 3.375 0 00-4.492.25v.001z"></path>
                                                    </svg>@*
                                                    *@@if (article.ArticleLikes.Count() == 1)
                                                    {@*
                                                        *@<span class="s:inline">@article.ArticleLikes.Count() reaction</span>
                                                    }
                                                    else
                                                    {@*
                                                        *@<span class="s:inline">@article.ArticleLikes.Count() reactions</span>
                                                    }
                                                </a>
                                                @*  Comments  *@
                                                <a class="blog-btn blog-btn--s blog-btn--ghost blog-btn--icon-left" asp-controller="Article" asp-action="Details" asp-route-id="@article.Id" asp-fragment="comments">
                                                    <svg class="blog-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24">
                                                        <path d="M10.5 5h3a6 6 0 110 12v2.625c-3.75-1.5-9-3.75-9-8.625a6 6 0 016-6zM12 15.5h1.5a4.501 4.501 0 001.722-8.657A4.5 4.5 0 0013.5 6.5h-3A4.5 4.5 0 006 11c0 2.707 1.846 4.475 6 6.36V15.5z"></path>
                                                    </svg>@*
                                                    *@@if (article.Comments.Count == 0)
                                                    {@*
                                                        *@<span class="s:inline"> Add comment</span>
                                                    }
                                                    else
                                                    {@*
                                                    *@@if (article.ArticleLikes.Count() == 1)
                                                        {@*
                                                            *@<span class="s:inline">@article.Comments.Count() comment</span>
                                                        }
                                                        else
                                                        {@*
                                                            *@<span class="s:inline">@article.Comments.Count() comments</span>
                                                        }
                                                    }
                                                </a>
                                            </div>
                                            @*  Favourite  *@
                                            <div class="blog-article__save">
                                                @*  Min to read  *@
                                                <small class="blog-article__tertiary fs-xs mr-2">@Math.Ceiling((double)article.Text.Length / 1500) min read</small>
                                                @*  Favourite button  *@
                                                @if (article.Favourites.Any(x => x.ArticleId == article.Id && x.UserId.ToString() == UserManager.GetUserId(User)))
                                                {
                                                    <button class="c-btn c-btn--icon-alone reading-list" type="button" title="Save to reading list" aria-pressed="true" value="@article.Id">
                                                        <svg class="crayons-icon c-btn__icon" focusable="false" width="24" height="24" xmlns="http://www.w3.org/2000/svg">
                                                            <path d="M6.75 4.5h10.5a.75.75 0 0 1 .75.75v14.357a.375.375 0 0 1-.575.318L12 16.523l-5.426 3.401A.375.375 0 0 1 6 19.607V5.25a.75.75 0 0 1 .75-.75z"></path>
                                                        </svg>
                                                    </button>
                                                }
                                                else
                                                {
                                                    <button class="c-btn c-btn--icon-alone reading-list" type="button" title="Save to reading list" aria-pressed="false" value="@article.Id">
                                                        <svg class="crayons-icon c-btn__icon" focusable="false" width="24" height="24" xmlns="http://www.w3.org/2000/svg">
                                                            <path d="M6.75 4.5h10.5a.75.75 0 0 1 .75.75v14.357a.375.375 0 0 1-.575.318L12 16.523l-5.426 3.401A.375.375 0 0 1 6 19.607V5.25a.75.75 0 0 1 .75-.75zM16.5 6h-9v11.574l4.5-2.82 4.5 2.82V6z"></path>
                                                        </svg>
                                                    </button>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </article>
                        }
                    </div>
                }
                else
                {
                    <div class="p-9 align-center blog-card tab-pane fade active show" id="articles" role="tabpanel" aria-labelledby="articles-tab">No results match that query</div>
                }
                <div id="people" class="tab-pane fade" role="tabpanel" aria-labelledby="people-tab">
                    @await Component.InvokeAsync("SearchPeople", new { search = ViewData["Search"] })
                </div>
                <div id="tags" class="tab-pane fade" role="tabpanel" aria-labelledby="tags-tab">
                    @await Component.InvokeAsync("SearchTags", new { search = ViewData["Search"] })
                </div>
                
            </div>
        </div>
    </main>
</div>