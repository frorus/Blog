@using Microsoft.AspNetCore.Identity
@model UserProfileViewModel

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Profile";
}

<div class="wrapper">
    <main>
        <div class="brand-bg">
            @*  Common user's info  *@
            <div class="blog-layout blog-layout--limited-l pt-7 pt-9">
                <header class="profile-header blog-card mt-2">
                    @*  User's avatar  *@
                    <div class="relative profile-header__top">
                        <span class="blog-avatar">
                            <img class="blog-avatar__image" src="/img/avatars/@Model.ImagePath" width="128" height="128">
                        </span>
                        @if (SignInManager.IsSignedIn(User))
                        {
                            <div class="profile-header__actions">
                                <a class="blog-btn whitespace-nowrap" asp-controller="Account" asp-action="Settings">Edit profile</a>
                            </div>
                        }
                    </div>
                    @*  Info section  *@
                    <div class="profile-header__details">
                        @*  Name  *@
                        @if (String.IsNullOrEmpty(Model.Name))
                        {
                            <h1 class="blog-title fw-heavy mb-2">@Model.Email</h1>
                        }
                        else
                        {
                            <h1 class="blog-title fw-heavy mb-2">@Model.Name</h1>
                        }
                        @*  Bio  *@
                        @if(String.IsNullOrEmpty(Model.Bio))
                        {
                            <p class="fs-l color-base-90 mb-4 mx-auto max-w-75">404 bio not found</p>
                        }
                        else
                        {
                            <p class="fs-l color-base-90 mb-4 mx-auto max-w-75">@Model.Bio</p>
                        }
                        <div class="profile-header__meta">
                            @*  Location  *@
                            @if(!String.IsNullOrEmpty(Model.Location))
                            {
                                <span class="profile-header__meta__item">
                                    <svg class="blog-icon mr-2 shrink-0" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" role="img">
                                        <path d="M18.364 17.364L12 23.728l-6.364-6.364a9 9 0 1112.728 0zM12 13a2 2 0 100-4 2 2 0 000 4z"></path>
                                    </svg>
                                    <span>@Model.Location</span>
                                </span>
                            }
                            @*  Joined date  *@
                            <span class="profile-header__meta__item">
                                <svg class="blog-icon mr-2 shrink-0" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" role="img">
                                    <path d="M8 6v3.999h3V6h2v3.999h3V6h2v3.999L19 10a3 3 0 012.995 2.824L22 13v1c0 1.014-.377 1.94-.999 2.645L21 21a1 1 0 01-1 1H4a1 1 0 01-1-1v-4.36a4.025 4.025 0 01-.972-2.182l-.022-.253L2 14v-1a3 3 0 012.824-2.995L5 10l1-.001V6h2zm11 6H5a1 1 0 00-.993.883L4 13v.971l.003.147a2 2 0 003.303 1.4c.363-.312.602-.744.674-1.218l.015-.153.005-.176c.036-1.248 1.827-1.293 1.989-.134l.01.134.004.147a2 2 0 003.992.031l.012-.282c.124-1.156 1.862-1.156 1.986 0l.012.282a2 2 0 003.99 0L20 14v-1a1 1 0 00-.883-.993L19 12zM7 1c1.32.871 1.663 2.088 1.449 2.888a1.5 1.5 0 11-2.898-.776C5.85 2.002 7 2.5 7 1zm5 0c1.32.871 1.663 2.088 1.449 2.888a1.5 1.5 0 01-2.898-.776C10.85 2.002 12 2.5 12 1zm5 0c1.32.871 1.663 2.088 1.449 2.888a1.5 1.5 0 01-2.898-.776C15.85 2.002 17 2.5 17 1z"></path>
                                </svg>
                                <span>Joined on <time>@Model.JoinedDate.ToLongDateString()</time></span>
                            </span>
                            @*  Email  *@
                            <a class="profile-header__meta__item" href="mailto:@Model.Email">
                                <svg class="blog-icon mr-2 shrink-0" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" role="img">
                                    <path d="M3 3h18a1 1 0 011 1v16a1 1 0 01-1 1H3a1 1 0 01-1-1V4a1 1 0 011-1zm9.06 8.683L5.648 6.238 4.353 7.762l7.72 6.555 7.581-6.56-1.308-1.513-6.285 5.439h-.001z"></path>
                                </svg>
                                <span>@Model.Email</span>
                            </a>
                            @*  Website  *@
                            @if(!String.IsNullOrEmpty(Model.Website))
                            {
                                <a class="profile-header__meta__item" href="@Model.Website">
                                    <svg class="blog-icon mr-2 shrink-0" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" role="img">
                                        <path d="M10.667 8v1.333H7.333v7.334h7.334v-3.334H16v4a.666.666 0 01-.667.667H6.667A.666.666 0 016 17.333V8.667A.667.667 0 016.667 8h4zM18 6v5.333h-1.333V8.275l-5.196 5.196-.942-.942 5.194-5.196h-3.056V6H18z"></path>
                                    </svg>
                                    <span>@Model.Website</span>
                                </a>
                            }
                        </div>
                    </div>
                    @*  Education/Work section  *@
                    @if (!String.IsNullOrEmpty(Model.Education) && !String.IsNullOrEmpty(Model.Work))
                    {
                        <div class="profile-header__bottom fs-base">
                            @*  Education  *@
                            @if (!String.IsNullOrEmpty(Model.Education))
                            {
                                <div class="blog-definition">
                                    <strong class="blog-definition__title">
                                        Education
                                    </strong>
                                    <p>@Model.Education</p>
                                </div>
                            }
                            @*  Work  *@
                            @if (!String.IsNullOrEmpty(Model.Work))
                            {
                                <div class="blog-definition">
                                    <strong class="blog-definition__title">
                                        Work
                                    </strong>
                                    <p>@Model.Work</p>
                                </div>
                            }
                        </div>
                    }
                </header>
            </div>
        </div>
        <div class="blog-layout blog-layout--limited-l blog-layout--2-cols blog-layout--2-cols--1-2 pt-0">
            @*  Sidebar cards  *@
            <div class="blog-layout__sidebar-left blog-layout__content">
                <div class="gap-4 grid">
                    @*  Learning  *@
                    @if (!String.IsNullOrEmpty(Model.Learning))
                    {
                        <div class="blog-card blog-card--secondary">
                            <header class="blog-card__header">
                                <h3 class="blog-subtitle-3">
                                    Currently learning
                                </h3>
                            </header>
                            <div class="blog-card__body">
                                @Model.Learning
                            </div>
                        </div>
                    }
                    @*  Skills  *@
                    @if (!String.IsNullOrEmpty(Model.Skills))
                    {
                        <div class="blog-card blog-card--secondary">
                            <header class="blog-card__header">
                                <h3 class="blog-subtitle-3">
                                    Skills/Languages
                                </h3>
                            </header>
                            <div class="blog-card__body">
                                @Model.Skills
                            </div>
                        </div>
                    }
                    @*  User statistics  *@
                    <div class="blog-card blog-card--secondary p-4">
                        @*  Posts published  *@
                        <div class="flex items-center mb-4">
                            <svg class="blog-icon mr-3 color-base-50" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" role="img">
                                <path d="M19 22H5a3 3 0 01-3-3V3a1 1 0 011-1h14a1 1 0 011 1v12h4v4a3 3 0 01-3 3zm-1-5v2a1 1 0 002 0v-2h-2zm-2 3V4H4v15a1 1 0 001 1h11zM6 7h8v2H6V7zm0 4h8v2H6v-2zm0 4h5v2H6v-2z"></path>
                            </svg>
                            <span>@Model.Articles.Count posts published</span>
                        </div>
                        @*  Comments written  *@
                        <div class="flex items-center">
                            <svg class="blog-icon mr-3 color-base-50" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" role="img">
                                <path d="M10 3h4a8 8 0 010 16v3.5c-5-2-12-5-12-11.5a8 8 0 018-8zm2 14h2a6 6 0 000-12h-4a6 6 0 00-6 6c0 3.61 2.462 5.966 8 8.48V17z"></path>
                            </svg>
                            <span>@Model.Comments comments written</span>
                        </div>
                    </div>
                </div>
            </div>
            @*  User articles  *@
            <main class="blog-layout__content articles-list">
                <div>
                    @foreach(var article in Model.Articles)
                    {
                        @*  Get username  *@
                        var user = await UserManager.GetUserNameAsync(article.User);

                        @*  Article  *@
                        <article class="blog-story">
                            <div class="blog-story__body">
                                <div class="blog-story__top">
                                    <div class="blog-story__meta">
                                        @*  User avatar  *@
                                        <div class="blog-story__author-pic">
                                            <a class="blog-avatar blog-avatar--l" asp-controller="User" asp-action="GetUserProfile" asp-route-id="@article.UserId">
                                                <img class="blog-avatar__image" src="/img/avatars/@Model.ImagePath" loading="lazy">
                                            </a>
                                        </div>
                                        <div>
                                            @*  User name  *@
                                            <div>
                                                <div class="relative mb-0 fw-medium inline-block">
                                                    <span class="fs-s p-1 -ml-1 -my-2">@user</span>
                                                </div>
                                            </div>
                                            @*  Article creation date  *@
                                            <div class="blog-story__tertiary fs-xs">
                                                <time>@article.Date.ToLongDateString()</time>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="blog-story__indention">
                                    @*  Article title  *@
                                    <h3 class="blog-story__title fw-bold">
                                        <a asp-controller="Article" asp-action="Details" asp-route-id="@article.Id">@article.Title</a>
                                    </h3>
                                    @*  Article tags  *@
                                    <div class="blog-story__tags">
                                        @foreach(var tag in article.Tags)
                                        {
                                            <a class="blog-tag" asp-controller="Tag" asp-action="Details" asp-route-id="@tag.Id">
                                                <span class="blog-tag__prefix">#</span>@tag.Title
                                            </a>
                                        }
                                    </div>
                                    @*  Likes/comments/favourite section  *@
                                    <div class="blog-article__bottom">
                                        <div class="blog-article__details">
                                            @*  Likes  *@
                                            @*  Here and below extra comments (started with "@*") added for remove spaces between inline blocks  *@
                                            <a class="blog-btn blog-btn--s blog-btn--ghost blog-btn--icon-left" asp-controller="Article" asp-action="Details" asp-route-id="@article.Id">
                                                <svg class="blog-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24">
                                                    <path d="M18.884 12.595l.01.011L12 19.5l-6.894-6.894.01-.01A4.875 4.875 0 0112 5.73a4.875 4.875 0 016.884 6.865zM6.431 7.037a3.375 3.375 0 000 4.773L12 17.38l5.569-5.569a3.375 3.375 0 10-4.773-4.773L9.613 10.22l-1.06-1.062 2.371-2.372a3.375 3.375 0 00-4.492.25v.001z"></path>
                                                </svg>@*
                                                *@@if(article.ArticleLikes.Count() == 1)
                                                {@*
                                                    *@<span class="s:inline">@article.ArticleLikes.Count() reaction</span>
                                                }
                                                else
                                                {@*
                                                    *@<span class="s:inline">@article.ArticleLikes.Count() reactions</span>
                                                }
                                            </a>
                                            @*  Comments  *@
                                            <a class="blog-btn blog-btn--s blog-btn--ghost blog-btn--icon-left" asp-controller="Article" asp-action="Details" asp-route-id="@article.Id" asp-fragment="comments">
                                                <svg class="blog-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24">
                                                    <path d="M10.5 5h3a6 6 0 110 12v2.625c-3.75-1.5-9-3.75-9-8.625a6 6 0 016-6zM12 15.5h1.5a4.501 4.501 0 001.722-8.657A4.5 4.5 0 0013.5 6.5h-3A4.5 4.5 0 006 11c0 2.707 1.846 4.475 6 6.36V15.5z"></path>
                                                </svg>@*
                                                *@@if (article.Comments.Count == 0)
                                                {@*
                                                    *@<span class="s:inline"> Add comment</span>
                                                }
                                                else
                                                {@*
                                                *@@if (article.ArticleLikes.Count() == 1)
                                                    {@*
                                                        *@<span class="s:inline">@article.Comments.Count() comment</span>
                                                    }
                                                    else
                                                    {@*
                                                        *@<span class="s:inline">@article.Comments.Count() comments</span>
                                                    }
                                                }
                                            </a>
                                        </div>
                                        @*  Favourite  *@
                                        <div class="blog-article__save">
                                            @*  Min to read  *@
                                            <small class="blog-article__tertiary fs-xs mr-2">@Math.Ceiling((double)article.Text.Length / 1500) min read</small>
                                            @*  Favourite button  *@
                                            @if (article.Favourites.Any(x => x.ArticleId == article.Id && x.UserId.ToString() == UserManager.GetUserId(User)))
                                            {
                                                <button class="c-btn c-btn--icon-alone reading-list" type="button" title="Save to reading list" aria-pressed="true" value="@article.Id">
                                                    <svg class="crayons-icon c-btn__icon" focusable="false" width="24" height="24" xmlns="http://www.w3.org/2000/svg">
                                                        <path d="M6.75 4.5h10.5a.75.75 0 0 1 .75.75v14.357a.375.375 0 0 1-.575.318L12 16.523l-5.426 3.401A.375.375 0 0 1 6 19.607V5.25a.75.75 0 0 1 .75-.75z"></path>
                                                    </svg>
                                                </button>
                                            }
                                            else
                                            {
                                                <button class="c-btn c-btn--icon-alone reading-list" type="button" title="Save to reading list" aria-pressed="false" value="@article.Id">
                                                    <svg class="crayons-icon c-btn__icon" focusable="false" width="24" height="24" xmlns="http://www.w3.org/2000/svg">
                                                        <path d="M6.75 4.5h10.5a.75.75 0 0 1 .75.75v14.357a.375.375 0 0 1-.575.318L12 16.523l-5.426 3.401A.375.375 0 0 1 6 19.607V5.25a.75.75 0 0 1 .75-.75zM16.5 6h-9v11.574l4.5-2.82 4.5 2.82V6z"></path>
                                                    </svg>
                                                </button>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </article>
                    }
                </div>
            </main>
        </div>
    </main>
</div>