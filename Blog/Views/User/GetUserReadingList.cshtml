@using Microsoft.AspNetCore.Identity

@inject UserManager<ApplicationUser> UserManager

@model ReadingListViewModel

@{
    ViewData["Title"] = "Reading List";
}

<div class="wrapper">
    <main class="blog-layout blog-layout--header-inside blog-layout--2-cols">
        @*  Header  *@
        <header class="blog-page-header flex">
            @*  Reading list (count)  *@
            <div class="flex justify-between items-center flex-1 mb-0">
                <h1 class="blog-title flex-1">Избранные статьи (@Model.Articles.Count())</h1>
            </div>
            @*  Search field  *@
            <fieldset class="flex justify-end pl-2 w-auto">
                <input id="searchbox" class="blog-textfield mb-0" type="text" placeholder="Поиск...">
            </fieldset>
        </header>
        @*  Sidebar  *@
        <div class="blog-layout__sidebar-left">
            <nav aria-label="Filter by tag">
                <ul class="list-none">
                    <li>
                        <a class="blog-link blog-link--block blog-link--current" asp-action="GetUserReadingList" asp-controller="User" asp-route-id="@Model.UserId">Все теги</a>
                    </li>
                    @foreach (var tag in Model.Tags)
                    {
                        <li>
                            <a class="tag blog-link blog-link--block" data-id="@Model.UserId" data-tag="@tag" asp-controller="User" asp-action="GetUserReadingListByTag">
                                #@tag
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
        @*  Articles  *@
        <section class="blog-layout__content blog-card pb-4">
            @if (Model.Articles.Any())
            {
                @foreach (var article in Model.Articles)
                {
                    @*  Get username  *@
                    var user = await UserManager.GetUserNameAsync(article.User);

                    <article class="flex p-6 pb-2 pr-6">
                        @*  Avatar  *@
                        <a class="blog-avatar blog-avatar--l" asp-controller="User" asp-action="GetUserProfile" asp-route-id="@article.UserId">
                            <img class="blog-avatar__image" src="/img/avatars/@article.User.ImagePath">
                        </a>
                        @*  Article data  *@
                        <div class="flex-1 pl-2 pl-4">
                            @*  Title  *@
                            <a class="flex blog-link" asp-controller="Article" asp-action="Details" asp-route-id="@article.Id">
                                <h2 class="lh-tight fs-l fw-bold break-word">@article.Title</h2>
                            </a>
                            @*  Article info  *@
                            <p class="fs-s">
                                @*  Author  *@
                                <a class="blog-link fw-medium" asp-controller="User" asp-action="GetUserProfile" asp-route-id="@article.UserId">@user</a>
                                <span class="color-base-30"> • </span>
                                @*  Creation date / time to read  *@
                                <span class="color-base-60">
                                    @article.Date.ToLongDateString()
                                    <span class="color-base-30"> • </span>
                                    @Math.Ceiling((double)article.Text.Length / 1500) мин на чтение
                                </span>
                                @*  Tags  *@
                                <span>
                                    <span class="color-base-30"> • </span>
                                    @foreach (var tag in article.Tags)
                                    {
                                        <a class="blog-tag blog-tag--monochrome" asp-controller="Tag" asp-action="Details" asp-route-id="@tag.Id">
                                            <span class="blog-tag__prefix">#</span>@tag.Title
                                        </a>
                                    }
                                </span>
                            </p>
                        </div>
                        @*  Favourite button  *@
                        <div class="self-center">
                            @if (article.Favourites.Any(x => x.ArticleId == article.Id && x.UserId.ToString() == UserManager.GetUserId(User)))
                            {
                                <button class="c-btn c-btn--icon-alone reading-list" type="button" title="Save to reading list" aria-pressed="true" value="@article.Id">
                                    <svg class="crayons-icon c-btn__icon" focusable="false" width="24" height="24" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M6.75 4.5h10.5a.75.75 0 0 1 .75.75v14.357a.375.375 0 0 1-.575.318L12 16.523l-5.426 3.401A.375.375 0 0 1 6 19.607V5.25a.75.75 0 0 1 .75-.75z"></path>
                                    </svg>
                                </button>
                            }
                            else
                            {
                                <button class="c-btn c-btn--icon-alone reading-list" type="button" title="Save to reading list" aria-pressed="false" value="@article.Id">
                                    <svg class="crayons-icon c-btn__icon" focusable="false" width="24" height="24" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M6.75 4.5h10.5a.75.75 0 0 1 .75.75v14.357a.375.375 0 0 1-.575.318L12 16.523l-5.426 3.401A.375.375 0 0 1 6 19.607V5.25a.75.75 0 0 1 .75-.75zM16.5 6h-9v11.574l4.5-2.82 4.5 2.82V6z"></path>
                                    </svg>
                                </button>
                            }
                        </div>
                    </article>
                }
            }
            else
            {
                <section class="align-center p-9 py-10 color-base-80">
                    <h2 class="fw-bold fs-l">Список избранных статей пуст</h2>
                    <p class="color-base-60 pt-2">
                        Нажмите на
                        <span class="fw-bold">
                            значок закладки
                            <svg class="blog-icon mx-1" width="24" height="24" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" role="img">
                                <path d="M5 2h14a1 1 0 011 1v19.143a.5.5 0 01-.766.424L12 18.03l-7.234 4.536A.5.5 0 014 22.143V3a1 1 0 011-1zm13 2H6v15.432l6-3.761 6 3.761V4z"></path>
                            </svg>
                        </span>
                        если хотите добавить статью в избранное.
                    </p>
                </section>
            }
        </section>
    </main>
</div>

@section scripts{
    <script>
        //Search

        let cards = document.querySelectorAll('article')

        function liveSearch() {
            let search_query = document.getElementById("searchbox").value;

            for (var i = 0; i < cards.length; i++) {
                if (cards[i].textContent.toLowerCase()
                    .includes(search_query.toLowerCase())) {
                    cards[i].classList.remove("hidden");
                } else {
                    cards[i].classList.add("hidden");
                }
            }
        }

        let typingTimer;
        let typeInterval = 500;
        let searchInput = document.getElementById('searchbox');

        searchInput.addEventListener('keyup', () => {
            clearTimeout(typingTimer);
            typingTimer = setTimeout(liveSearch, typeInterval);
        });
    </script>
}